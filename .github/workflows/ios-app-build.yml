name: Build and Deploy iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Deploy iOS App
    runs-on: macos-latest
    
    env:
      XCODE_PROJECT: "JITEnabler.xcodeproj"
      XCODE_SCHEME: "JITEnabler"
      BUNDLE_ID: "com.jitenabler.app"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Install Apple Certificate
        uses: apple-actions/import-codesigning-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_P12 }}
          p12-password: ${{ secrets.IOS_DISTRIBUTION_P12_PASSWORD }}
          keychain: github-actions-xcode
          keychain-password: ${{ github.run_id }}
      
      - name: Install Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
      
      - name: Set up environment variables
        run: |
          echo "Setting up environment variables..."
          echo "DROPBOX_APP_KEY=${{ secrets.DROPBOX_APP_KEY }}" >> .env
          echo "DROPBOX_APP_SECRET=${{ secrets.DROPBOX_APP_SECRET }}" >> .env
          echo "DROPBOX_REFRESH_TOKEN=${{ secrets.DROPBOX_REFRESH_TOKEN }}" >> .env
      
      - name: Build iOS app
        run: |
          echo "Building iOS app..."
          xcodebuild archive \
            -project "$XCODE_PROJECT" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -archivePath build/JITEnabler.xcarchive \
            -allowProvisioningUpdates \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="${{ secrets.IOS_DISTRIBUTION_CERTIFICATE_NAME }}" \
            PROVISIONING_PROFILE_SPECIFIER="${{ secrets.IOS_PROVISIONING_PROFILE_SPECIFIER }}"
          
          # Create IPA
          xcodebuild -exportArchive \
            -archivePath build/JITEnabler.xcarchive \
            -exportPath build/ios/ipa \
            -exportOptionsPlist ExportOptions.plist
      
      - name: Create ExportOptions.plist
        run: |
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>teamID</key>
              <string>${{ secrets.APPLE_TEAM_ID }}</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>${BUNDLE_ID}</key>
                  <string>${{ secrets.IOS_PROVISIONING_PROFILE_SPECIFIER }}</string>
              </dict>
          </dict>
          </plist>
          EOF
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: |
            build/ios/ipa/*.ipa
            build/JITEnabler.xcarchive/dSYMs/
      
      - name: Upload to TestFlight
        if: github.event_name != 'pull_request'
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: build/ios/ipa/*.ipa
          issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
name: Sign and Distribute Shortcuts

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  sign-shortcuts:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Debug directory structure
      - name: List Directory Structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Listing all files in repository:"
          find . -type f -ls
          echo "Checking for Priv folder:"
          find . -type d -name "Priv" || echo "Priv folder not found"
          echo "Listing .shortcut files:"
          find . -type f -name "*.shortcut" || echo "No .shortcut files found"

      # Step 3: Install dependencies and download zsign
      - name: Install Dependencies and Download zsign
        run: |
          brew install curl unzip
          curl -L -o zsign-v0.7-macos-x64.zip https://github.com/zhlynn/zsign/releases/download/v0.7/zsign-v0.7-macos-x64.zip --fail --show-error
          if [ ! -f zsign-v0.7-macos-x64.zip ]; then
            echo "Error: zsign download failed"
            exit 1
          fi
          echo "ZIP download completed"
          unzip zsign-v0.7-macos-x64.zip -d zsign-bin
          if [ ! -f zsign-bin/zsign ]; then
            echo "Error: zsign binary not found after unzip"
            exit 1
          fi
          echo "ZIP extraction completed"
          file zsign-bin/zsign
          xattr -d com.apple.quarantine zsign-bin/zsign || true
          chmod +x zsign-bin/zsign
          echo "Permissions set for zsign"
          sudo mv zsign-bin/zsign /usr/local/bin/zsign
          if [ ! -f /usr/local/bin/zsign ]; then
            echo "Error: Failed to move zsign to /usr/local/bin"
            exit 1
          fi
          echo "zsign moved to /usr/local/bin"
          ZSIGN_OUTPUT=$(/usr/local/bin/zsign -h 2>&1 || true)
          ZSIGN_EXIT_CODE=$?
          echo "zsign -h exit code: $ZSIGN_EXIT_CODE"
          echo "zsign -h output: $ZSIGN_OUTPUT"
          if ! echo "$ZSIGN_OUTPUT" | grep -q "zsign (v0.7)"; then
            echo "Error: zsign is not valid or incorrect version"
            exit 1
          fi
          echo "zsign installed successfully"

      # Step 4: Find certificate
      - name: Locate Certificate
        id: find-files
        run: |
          P12_FILE=$(find . -type f -name "*.p12" -path "*/Priv/*" | head -n 1)
          if [ -z "$P12_FILE" ]; then
            echo "Error: Could not find .p12 file in Priv folder"
            find . -type f -name "*.p12"
            exit 1
          fi
          echo "p12_file=$P12_FILE" >> $GITHUB_OUTPUT
          echo "Found .p12: $P12_FILE"
          echo "Checksum of .p12 file:"
          shasum -a 256 "$P12_FILE"

      # Step 5: Sign Shortcuts with zsign
      - name: Sign Shortcuts with zsign
        run: |
          SHORTCUT_FILES=$(find . -type f -name "*.shortcut")
          if [ -z "$SHORTCUT_FILES" ]; then
            echo "Error: No .shortcut files found in repository"
            exit 1
          fi
          for file in $SHORTCUT_FILES; do
            echo "Signing $file..."
            /usr/local/bin/zsign -d -k "${{ steps.find-files.outputs.p12_file }}" \
                                -p "" \
                                -o "${file%.shortcut}-signed.shortcut" \
                                "$file"
            if [ ! -f "${file%.shortcut}-signed.shortcut" ]; then
              echo "Error: Signing failed for $file, signed shortcut not found"
              ls -lh .zsign_debug || echo "No debug folder found"
              exit 1
            fi
            echo "Signed shortcut created: ${file%.shortcut}-signed.shortcut"
            ls -lh "${file%.shortcut}-signed.shortcut"
          done

      # Step 6: Upload signed shortcuts to GitHub Releases
      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/*-signed.shortcut
          tag_name: v${{ github.run_id }}
          name: Signed Shortcuts Release
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
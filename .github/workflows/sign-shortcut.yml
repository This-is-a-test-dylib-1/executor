name: Build iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build iOS App
    runs-on: macos-latest
    
    env:
      XCODE_PROJECT: "JITEnabler.xcodeproj"
      XCODE_SCHEME: "JITEnabler"
      BUNDLE_ID: "com.jitenabler.app"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Set up environment variables
        run: |
          echo "Setting up environment variables..."
          echo "DROPBOX_APP_KEY=2bi422xpd3xd962" >> .env
          echo "DROPBOX_APP_SECRET=j3yx0b41qdvfu86" >> .env
          echo "DROPBOX_REFRESH_TOKEN=RvyL03RE5qAAAAAAAAAAAVMVebvE7jDx8Okd0ploMzr85c6txvCRXpJAt30mxrKF" >> .env
      
      - name: Create ExportOptions.plist for development build
        run: |
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>compileBitcode</key>
              <false/>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
      
      - name: Build iOS app
        run: |
          echo "Building iOS app..."
          # Build for simulator to avoid code signing requirements
          xcodebuild build \
            -project "$XCODE_PROJECT" \
            -scheme "$XCODE_SCHEME" \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
          
          # Create a directory for the app
          mkdir -p build/ios/app
          
          # Find the app in the build directory and copy it
          find ~/Library/Developer/Xcode/DerivedData -name "*.app" -type d -path "*$XCODE_SCHEME*" | xargs -I {} cp -R {} build/ios/app/
          
          # Create a simple zip file as our "IPA" for artifact purposes
          cd build/ios/app
          zip -r ../JITEnabler.ipa .
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app-build
          path: build/ios/JITEnabler.ipa